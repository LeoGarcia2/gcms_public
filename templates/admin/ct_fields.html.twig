{% extends 'admin/layout.html.twig' %}

{% block gcms_page %}

<h1>Set the content type's fields</h1>

<input type="text" id="field_name" placeholder="Field's name">

<select id="field_type">
	
	<option value="string" selected>String</option>
	<option value="text">Text</option>
	<option value="boolean">Boolean</option>
	<option value="integer">Integer</option>
	<option value="float">Float</option>
	<option value="datetime">Datetime</option>
	<option value="image">Image</option>

</select>

<select id="field_nullable">
	
	<option value="true">Nullable</option>
	<option value="false">Not nullable</option>

</select>

<label class="string_field" for="string_length">String's length</label>
<input class="string_field" id="string_length" type="number" min="1" max="255" value="255">

<button id="field_add">Add field</button>
<button id="submit_ct">Submit contenttype</button>

<table>
	
	<thead>
		<tr>
			<th>Id</th>
			<th>Name</th>
			<th>Type</th>
			<th>Options</th>
			<th>Remove</th>
		</tr>			
	</thead>
	<tbody>
		
	</tbody>

</table>

<form action="{{ path('fields_contenttype', { contenttype: ctName }) }}" method="post">
	{% if taxoGroups[0] is defined %}
		<p>Taxonomies</p>
		{% for group in taxoGroups %}
			<p>
				<input type="checkbox" name="taxo" id="{{ group }}" value="{{ group }}">
				<label for="{{ group }}">{{ group | capitalize }}</label>
			</p>
		{% endfor %}
	{% endif %}
	<select id="contenttypeFields" name="contenttypeFields[]" style="display: none;" multiple></select>
	<select id="imageFields" name="imageFields[]" style="display: none;" multiple></select>
	<textarea id="contenttypeArea" name="contenttypeArea" style="display: none;">{{ct}}</textarea>
	<button id="addContenttype" type="submit" style="opacity: 0;"></button>
</form>	

{% endblock %}

{% block javascripts %}

<script>

	let field_id = 0;
	let fields = [];
	let contains_image = false;

	$('#field_type').on('change', function(){

		if($('#field_type').val() == 'string'){

			$('.string_field').show();

		}else{

			$('.string_field').hide();

		}

	});

	$('#field_add').on('click', function(){

		let name = $('#field_name').val();

		fields.forEach(function(value, key){
			if(value.name == name){
				name = name+'Bis';
			}
		});

		if(name != ''){

			let type = $('#field_type').val();
			let nullable = $('#field_nullable').val();
			let length = null;

			if(type == 'string'){

				length = $('#string_length').val();

			}

			let options = 'nullable='+nullable;

			if(length != null){

				options += ', length='+length;

			}

			fields[field_id] = { name: name, type: type, options: options }
			field_id++;

			updateDisplay();

		}
			
	});

	$('tbody').on('click', '.remove', function(event){

		event.preventDefault();
		let id = $(this).attr('data-id');
		delete fields[id];
		updateDisplay();

	});

	$('#submit_ct').on('click', function(){

		let phpCode = $('#contenttypeArea').val();
		let content = '';
		let imageType = '';
		let taxo = [];
		$('input[name=taxo]:checked').each(function(){
			taxo.push($(this).val());
		});

		fields.forEach(function(value){

			let nameArray = value.name.split('_').join('-').split('-');
			let nameForTemplate = nameArray[0];
			for(let i = 1; i < nameArray.length; i++){
				nameForTemplate += nameArray[i].charAt(0).toUpperCase() + nameArray[i].slice(1);
			}

			$('#contenttypeFields').append('<option value="'+nameForTemplate+'" selected>'+nameForTemplate+'</option>');

			if(value.type == 'image'){
				contains_image = true;
				value.type = 'string';
				imageType = 'image';
				value.options += ', length=255';

				$('#imageFields').append('<option value="'+nameForTemplate+'" selected>'+nameForTemplate+'</option>');
			}

			let element = '\n    /**\n     * @ORM\\Column(type="'+value.type+'", '+value.options+')';

			element = element+'\n     */\n    private $'+nameForTemplate+';\n';
			if(imageType == 'image'){
				element = element+'\n    /**\n     * @Vich\\UploadableField(mapping="images", fileNameProperty="'+nameForTemplate+'")\n     */\n    private $'+nameForTemplate+'File;\n    public function set'+nameForTemplate.charAt(0).toUpperCase()+nameForTemplate.slice(1)+'File(?File $'+nameForTemplate+'File = null): void\n    {\n        $this->'+nameForTemplate+'File = $'+nameForTemplate+'File;\n        if(null !== $'+nameForTemplate+'File){\n            $this->updatedAt = new \\Datetime();\n        }\n    }\n    public function get'+nameForTemplate.charAt(0).toUpperCase()+nameForTemplate.slice(1)+'File(): ?File\n    {\n        return $this->'+nameForTemplate+'File;\n    }\n';
				imageType = '';
			}

			content = content+element;

		});
		
		if(contains_image){

			phpCode = phpCode.replace('Repository")\n */', 'Repository")\n * @Vich\\Uploadable\n */');

			phpCode = phpCode.replace('use Doctrine\\ORM\\Mapping as ORM;', 'use Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;');

		}

		let baseFields = '    /**\n     * @ORM\\Column(type="string", length=255)\n     */\n    private $author;\n\n    /**\n     * @ORM\\Column(type="string", length=255)\n     */\n    private $displayName;\n\n    /**\n     * @ORM\\Column(type="datetime")\n     */\n    private $updatedAt;\n\n    /**\n     * @ORM\\Column(type="boolean")\n     */\n    private $published;\n';

		for(let i = 0; i < taxo.length; i++){
			baseFields += '\n    /**\n     * @ORM\\Column(type="json")\n     */\n    private $taxo'+taxo[i].charAt(0).toUpperCase()+taxo[i].slice(1)+';\n';
		}

		phpCode = phpCode.replace('private $id;', 'private $id;\n\n'+baseFields+content);
		$('#contenttypeArea').val(phpCode);

		$('#addContenttype').click();

	});

	function updateDisplay(){

		$('tbody').html('');

		fields.forEach(function(value, key){

			$('tbody').html($('tbody').html()+
				'<tr><td>'+key+
				'</td><td>'+value.name+
				'</td><td>'+value.type+
				'</td><td>'+value.options+
				'</td><td><a class="remove" data-id="'+
				key+'" href="#">Remove</a></td></tr>');

		});

	}

</script>

{% endblock %}
